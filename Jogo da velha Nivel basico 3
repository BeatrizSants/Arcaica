<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Arcaica</title>
  <style>
    h1 {
      color: red;
    }

    button.field {
      width: 120px;
      height: 120px;
      font-size: 24px; /* Ajusta o tamanho da fonte para ficar proporcional ao botão */
    }

    div.header {
      text-align: center;
    }

    div.grade {
      display: flex;
      justify-content: center;
    }
  </style>
</head>
<body>
  <div class="jogo">
    <div class="header">
      <h1>ARCAICA</h1>
      <h2>Jogo da Velha</h2>
    </div>

    <div class="grade">
      <button id="1" class="field" onclick="fieldClick('1')"></button>
      <button id="2" class="field" onclick="fieldClick('2')"></button>
      <button id="3" class="field" onclick="fieldClick('3')"></button>
    </div>

    <div class="grade">
      <button id="4" class="field" onclick="fieldClick('4')"></button>
      <button id="5" class="field" onclick="fieldClick('5')"></button>
      <button id="6" class="field" onclick="fieldClick('6')"></button>
    </div>

    <div class="grade">
      <button id="7" class="field" onclick="fieldClick('7')"></button>
      <button id="8" class="field" onclick="fieldClick('8')"></button>
      <button id="9" class="field" onclick="fieldClick('9')"></button>
    </div>
  </div>

  <script>
    var vez = localStorage.getItem("vez") || "X"; // Inicializa com "X" se não houver valor no localStorage

    function fieldClick(id) {
      // Verifica se o campo já está preenchido
      if (document.getElementById(id).innerHTML !== "") {
        return;
      }

      // Preenche o campo com a vez atual (X ou O)
      document.getElementById(id).innerHTML = vez;

      // Verifica se alguém ganhou após a jogada
      if (checkWinner()) {
        alert("O jogador " + vez + " ganhou!");
        resetGame();
        return;
      }

      // Verifica se houve empate
      if (checkTie()) {
        alert("Empate!");
        resetGame();
        return;
      }

      // Alterna a vez entre X e O
      vez = vez === "X" ? "O" : "X";
      localStorage.setItem("vez", vez);

      // Se é a vez da máquina (O), ela faz uma jogada
      if (vez === "O") {
        machinePlay();
      }
    }

    // Função para a máquina fazer uma jogada
    function machinePlay() {
      // Estratégia:
      // 1. Verificar se há uma jogada para a máquina ganhar
      // 2. Se não houver, verificar se há uma jogada para bloquear o jogador
      // 3. Se não houver, escolher uma posição aleatória

      // Verificar se há uma jogada para a máquina ganhar
      var winMove = findWinningMove();
      if (winMove !== null) {
        document.getElementById(winMove).innerHTML = "O";
      } else {
        // Verificar se há uma jogada para bloquear o jogador
        var blockMove = findBlockMove();
        if (blockMove !== null) {
          document.getElementById(blockMove).innerHTML = "O";
        } else {
          // Escolher uma posição aleatória
          var emptyFields = [];
          for (var i = 1; i <= 9; i++) {
            if (document.getElementById(i.toString()).innerHTML === "") {
              emptyFields.push(i.toString());
            }
          }
          var randomIndex = Math.floor(Math.random() * emptyFields.length);
          var chosenField = emptyFields[randomIndex];
          document.getElementById(chosenField).innerHTML = "O";
        }
      }

      // Verifica se a máquina ganhou após a jogada
      if (checkWinner()) {
        alert("A máquina ganhou!");
        resetGame();
        return;
      }

      // Verifica se houve empate
      if (checkTie()) {
        alert("Empate!");
        resetGame();
        return;
      }

      // Alterna a vez para o jogador
      vez = "X";
      localStorage.setItem("vez", vez);
    }

    // Função para encontrar uma jogada para a máquina ganhar
    function findWinningMove() {
      // Array com todas as combinações vencedoras
      var winConditions = [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 5, 9],
        [3, 5, 7],
      ];

      // Verifica se alguma combinação vencedora está quase completa para a máquina
      for (var i = 0; i < winConditions.length; i++) {
        var [a, b, c] = winConditions[i];
        if (
          document.getElementById(a).innerHTML === "O" &&
          document.getElementById(b).innerHTML === "O" &&
          document.getElementById(c).innerHTML === ""
        ) {
          return c.toString();
        }
        if (
          document.getElementById(a).innerHTML === "O" &&
          document.getElementById(b).innerHTML === "" &&
          document.getElementById(c).innerHTML === "O"
        ) {
          return b.toString();
        }
        if (
          document.getElementById(a).innerHTML === "" &&
          document.getElementById(b).innerHTML === "O" &&
          document.getElementById(c).innerHTML === "O"
        ) {
          return a.toString();
        }
      }

      return null;
    }

    // Função para encontrar uma jogada para bloquear o jogador
    function findBlockMove() {
      // Array com todas as combinações vencedoras
      var winConditions = [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 5, 9],
        [3, 5, 7],
      ];

      // Verifica se alguma combinação vencedora está quase completa para o jogador
      for (var i = 0; i < winConditions.length; i++) {
        var [a, b, c] = winConditions[i];
        if (
          document.getElementById(a).innerHTML === "X" &&
          document.getElementById(b).innerHTML === "X" &&
          document.getElementById(c).innerHTML === ""
        ) {
          return c.toString();
        }
        if (
          document.getElementById(a).innerHTML === "X" &&
          document.getElementById(b).innerHTML === "" &&
          document.getElementById(c).innerHTML === "X"
        ) {
          return b.toString();
        }
        if (
          document.getElementById(a).innerHTML === "" &&
          document.getElementById(b).innerHTML === "X" &&
          document.getElementById(c).innerHTML === "X"
        ) {
          return a.toString();
        }
      }

      return null;
    }

    // Função para verificar se há um vencedor
    function checkWinner() {
      // Array com todas as combinações vencedoras
      var winConditions = [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 5, 9],
        [3, 5, 7],
      ];

      // Verifica se alguma combinação vencedora foi alcançada
      for (var i = 0; i < winConditions.length; i++) {
        var [a, b, c] = winConditions[i];
        if (
          document.getElementById(a).innerHTML !== "" &&
          document.getElementById(a).innerHTML ===
            document.getElementById(b).innerHTML &&
          document.getElementById(a).innerHTML ===
            document.getElementById(c).innerHTML
        ) {
          return true;
        }
      }

      return false;
    }

    // Função para verificar se houve empate
    function checkTie() {
      for (var i = 1; i <= 9; i++) {
        if (document.getElementById(i.toString()).innerHTML === "") {
          return false;
        }
      }
      return true;
    }

    // Função para reiniciar o jogo
    function resetGame() {
      for (var i = 1; i <= 9; i++) {
        document.getElementById(i.toString()).innerHTML = "";
      }
      vez = "X";
      localStorage.setItem("vez", vez);
    }
  </script>
</body>
</html>
